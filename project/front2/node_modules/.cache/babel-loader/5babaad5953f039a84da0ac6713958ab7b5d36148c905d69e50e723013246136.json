{"ast":null,"code":"var _jsxFileName = \"/Users/a1234/Desktop/reactwork23-3-1/project/front1/src/components/User.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useContext, useState } from 'react';\nimport UserSelect from './components/UserSelect';\nimport { selectContext } from '../App';\nimport UserInsert from './UserInsert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const {\n    ok,\n    setOk\n  } = useContext(selectContext);\n  const [email, setEmail] = useState('');\n  const emailinput = e => {\n    setEmail(e.target.value);\n  };\n  const [name, setName] = useState('');\n  const nameInput = e => {\n    setName(e.target.value);\n  };\n  const [password, setPassword] = useState('');\n  const passwordInput = e => {\n    setPassword(e.target.value);\n  };\n  const dosave = () => {\n    axios.post(`http://localhost:9000/users/insert`, {\n      email,\n      name,\n      password\n    }).then(() => {\n      setEmail('');\n      setName('');\n      setPassword('');\n      setOk(result => {\n        if (result === 'select 완료' || result === '') return '등록되었습니다.';else return result + '!';\n      });\n    }).catch(e => {\n      setOk('email 중복입니다.등록실패');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(UserInsert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserSelect, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(User, \"/MtbtQmaMYpxIkC9W8UkyFWofEU=\");\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["axios","React","useContext","useState","UserSelect","selectContext","UserInsert","jsxDEV","_jsxDEV","Fragment","_Fragment","User","_s","ok","setOk","email","setEmail","emailinput","e","target","value","name","setName","nameInput","password","setPassword","passwordInput","dosave","post","then","result","catch","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/a1234/Desktop/reactwork23-3-1/project/front1/src/components/User.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, {useContext, useState} from 'react';\nimport UserSelect from './components/UserSelect';\nimport {selectContext} from '../App';\nimport UserInsert from './UserInsert';\n\nconst User = () => {\n  const {ok, setOk} = useContext(selectContext);\n\n  const [email, setEmail] = useState('');\n  const emailinput = e => {\n    setEmail(e.target.value);\n  };\n\n  const [name, setName] = useState('');\n  const nameInput = e => {\n    setName(e.target.value);\n  };\n\n  const [password, setPassword] = useState('');\n  const passwordInput = e => {\n    setPassword(e.target.value);\n  };\n\n  const dosave = () => {\n    axios\n      .post(`http://localhost:9000/users/insert`, {\n        email,\n        name,\n        password,\n      })\n      .then(() => {\n        setEmail('');\n        setName('');\n        setPassword('');\n        setOk(result => {\n          if (result === 'select 완료' || result === '')\n            return '등록되었습니다.';\n          else return result + '!';\n        });\n      })\n      .catch(e => {\n        setOk('email 중복입니다.등록실패');\n      });\n  };\n  return (\n    <>\n      <div className=\"App\">\n        <UserInsert></UserInsert>\n        <UserSelect></UserSelect>\n      </div>\n    </>\n  );\n};\n \nexport default User;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAGC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AACjD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAAQC,aAAa,QAAO,QAAQ;AACpC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAACC,EAAE;IAAEC;EAAK,CAAC,GAAGZ,UAAU,CAACG,aAAa,CAAC;EAE7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,UAAU,GAAGC,CAAC,IAAI;IACtBF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B,CAAC;EAED,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMoB,SAAS,GAAGL,CAAC,IAAI;IACrBI,OAAO,CAACJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMuB,aAAa,GAAGR,CAAC,IAAI;IACzBO,WAAW,CAACP,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMO,MAAM,GAAGA,CAAA,KAAM;IACnB3B,KAAK,CACF4B,IAAI,CAAE,oCAAmC,EAAE;MAC1Cb,KAAK;MACLM,IAAI;MACJG;IACF,CAAC,CAAC,CACDK,IAAI,CAAC,MAAM;MACVb,QAAQ,CAAC,EAAE,CAAC;MACZM,OAAO,CAAC,EAAE,CAAC;MACXG,WAAW,CAAC,EAAE,CAAC;MACfX,KAAK,CAACgB,MAAM,IAAI;QACd,IAAIA,MAAM,KAAK,WAAW,IAAIA,MAAM,KAAK,EAAE,EACzC,OAAO,UAAU,CAAC,KACf,OAAOA,MAAM,GAAG,GAAG;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAACb,CAAC,IAAI;MACVJ,KAAK,CAAC,kBAAkB,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EACD,oBACEN,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACExB,OAAA;MAAKyB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBxB,OAAA,CAACF,UAAU;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAc,eACzB7B,OAAA,CAACJ,UAAU;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAc;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrB,iBACL;AAEP,CAAC;AAACzB,EAAA,CA/CID,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}